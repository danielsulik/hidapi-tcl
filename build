#!/bin/bash

# Restart using tclsh\
exec tclsh "$0" "$@"

set PKG_VERSION 1.0

proc main { } {
  global PKG_VERSION

  cmd swig -tcl -pkgversion $PKG_VERSION hidapi_tcl.i
  cmd tclsh swig-replace.tcl hidapi_tcl_wrap.c
  if { [string match "windows*" [string tolower $::tcl_platform(os)]] } {
  #cmd gcc -Wall -g -Ic:/Tcl/include -I../hidapi/hidapi -Ic:/Tcl/include -c hidapi_tcl_wrap.c -o hidapi_tcl_wrap.o -lhidapi 
  #cmd dllwrap --driver-name gcc -def hidapi_tcl.def -o hidapi_tcl.dll -Lc:/Tcl/lib -L../hidapi/windows/Debug -ltcl86 -lhidapi -lm
  cmd cp Release/hidapi_tcl.dll .
  cmd xcopy ../hidapi/windows/Debug/hidapi.dll c:/Windows/system32/hidapi.dll /Y
  set sofile hidapi_tcl.dll
  } else {
  cmd gcc -Wall -shared hidapi_tcl_wrap.c \
          -I/usr/include/tcl -I../hidapi/hidapi\
          -L/usr/local/lib -lhidapi-libusb -o hidapi_tcl.so
  set sofile hidapi_tcl.so
  }

  puts "Making pkgIndex"
  pkg_mkIndex . $sofile *.tcl
  
  puts "Installing..."
  foreach dir $::auto_path {
    if { [file isdirectory $dir] } {
      puts " Using $dir"
      set target [file join $dir hidapi_tcl$PKG_VERSION]
      puts "    Creating $target"
      file mkdir $target
      puts "    $sofile -> [file join $target $sofile]"
      file copy -force $sofile $target
      puts "    pkgIndex.tcl -> [file join $target pkgIndex.tcl]"
      file copy -force pkgIndex.tcl $target
      puts "    utils.tcl -> [file join $target utils.tcl]"
      file copy -force utils.tcl $target
      puts "done"
      break
    }
  }
}

proc cmd { args } {
  puts -nonewline "Running: $args ... "
  flush stdout
  if { [catch "eval exec $args" result] } {
    puts "FAILED!"
    puts "Message was:"
    puts "$result"
    exit 1
  } else {
    puts " ok"
  }
}

main
